# ==================================================================================================
# ---------------------------------- CONFIGURATION FILE FOR ERUO -----------------------------------
# This file allows the modification of most of the parameters of the library, used in all three
# stages of the algorithm.
# The default values are the ones detailed in the manuscript that presents the ERUO library.
# The only values that absolutely need to be changed by the user are in the first section
# of this file: PATHS.
# The user is required to input the correct paths in which the original MRR-PRO files are stored,
# and the ones in which they desire to save any of the ERUO products.
# 
# Tip: set visualization to PYTHON syntax for an easier visualization of this file.
#
# ==================================================================================================
[PATHS]
# --------------------------------------------------------------------------------------------------
# Information regarding directories and file names.
# Note: On Windows, use \\ as path separators. On Linux, use / instead.
# ==================================================================================================
# DIRECTORIES
# Directory at the root of the subfolder tree containing all measurements files
dir_input_netcdf = /Users/vonw/data/raven/mrr/Raw_data

# Directory for saving the interference\boundary mask\clear sky profile
dir_npy = /Users/vonw/data/raven/mrr/archive

# Directory for saving the output processed netCDF files
dir_proc_netcdf = /Users/vonw/data/raven/mrr/proc_files

# Directory for saving the postprocessed netCDF files
dir_postproc_netcdf = /Users/vonw/data/raven/mrr/postproc_files

# Directory for saving quickplots of processed data
dir_quickplots = /Users/vonw/data/raven/mrr/quickplots_proc

# Directory for saving quickplots of postprocessed data
dir_quickplots_postproc = /Users/vonw/data/raven/mrr/quickplots_postproc

# FILE NAMES
# Preprocessing products
fname_interference_mask = interference_mask.npy
fname_border_correction = border_correction.npy
fname_reconstructed_median = reconstructed_median.npy
fname_interf_isolated_peaks = alternative_interference_mask.npy

# Output netCDF file prefix (will be added before filenames of all ERUO netCDF output files)
OUT_FNAME_PREFIX = ERUO_

# Suffix for postprocessed files (will be added after filenames of ERUO postprocessed netCDF files)
OUT_POSTPROCESSED_SUFFIX = _postprocessed

# ==================================================================================================
[LIMITATION]
# --------------------------------------------------------------------------------------------------
# A collection of parameters to limit the number of files\\spectra processed, and to toggle on\\off
# the parallelization of the procedure.
# ==================================================================================================
# Maximum number of files that can be given in input to the processing (interference removal and
# boundary correction.
# Write ALL to process all files. (Case insensitive)
MAX_NUM_FILES_TO_PREPROCESS = ALL

# Maximum number of files that can be processed (from MRR "raw" netCDF files to final processed
# netCDF files)
# Write ALL to process all files. (Case insensitive)
MAX_NUM_FILES_TO_PROCESS = ALL

# Maximum number of spectra in a file to process (usually files contain multiple spectra).
# Write ALL to process all files. (Case insensitive)
MAX_NUM_SPECTRA_TO_PROCESS = ALL

# Parallelization: should multi-threading be used?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
PARALLELIZATION = 0
# Number of jobs that run in parallel (if PARALLELIZATION = 1)
# Negative numbers result in (Num. CPU + 1 + NUM_JOBS) being used.
# Example: NUM_JOBS = -2, all CPUs but one are used.
# (From: https:\\\\joblib.readthedocs.io\\en\\latest\\generated\\joblib.Parallel.html)
NUM_JOBS = -2


# ==================================================================================================
[REPROCESSING_INFO]
# --------------------------------------------------------------------------------------------------
# Information concerning what to do if a processing has already be done in the past, and some files
# already exist. New, recomputed will be overwritten over already existing ones. 
# ==================================================================================================
# Should the quantile of the matrix containing the concatenated spectra of all the campaign be 
# recomputed even if already existing?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
REGENERATE_QUANTILE_ARCHIVE = 1

# Should the interference mask and the border correction be recomputed even if already existing?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
REGENERATE_PREPROCESSING_PRODUCTS = 1

# ==================================================================================================
[INPUT_NECDF_VARIABLE_NAMES]
# --------------------------------------------------------------------------------------------------
# The name of the variable containing the spectrum can vary according to the MRR-PRO settings.
# ==================================================================================================
# In case the available spectrum is the "raw one"
SPECTRUM_VARNAME = spectrum_raw

# In case the available spectrum is the reflectivity one, the library will not function correctly.

# ==================================================================================================
[FIXED_PARAMETERS]
# --------------------------------------------------------------------------------------------------
# Constants used in the processing of the spectra of the MRR-PRO.
# ==================================================================================================
# Sampling rate of MRR-PRO (in Hz)
f_s = 500000
# Wavelength of MRR-PRO (in m)
lam = 0.01238
# Speed of light in air (in m\\s)
c = 299700000
# |K^2| (Dielectric factor of water, from Segelstein, David J. 1981 [1])
k2 = 0.92

# References:
# [1] https:\\\\mospace.umsystem.edu\\xmlui\\handle\\10355\\11599)

# ==================================================================================================
[PREPROCESSING_PARAMETERS]
# --------------------------------------------------------------------------------------------------
# Parameters used in the pre-processing of a dataset.
# ==================================================================================================
# The quantile (on the time axis) of the concatenated spectra in the dataset, to be used for the
# computation of the interference mask and
QUANTILE_PREPROCESSING = 0.5

# 1) Parameters for "fitting a smooth spectrum"
# Max gradient of median profile (to exclude peaks from affecting the fit too much)
MAX_GRADIENT_MULTIPLIER_INTER_FIT = 3.
# Degree of the polynomial used for the fit of the noise floor 
CHOSEN_DEGREE_FIT_INTER_FIT = 4
# Minimum lenght of a non-NaN section of the interpolated profile to be accepted
MIN_LEN_SLICES_INTERF_FIT = 3

# 2) Parameters for identifying the interference above the fitted profile
# Maximum allowed power above fitted profile (above this value: masked as interference)
PROMINENCE_INTERFERENCE_REMOVAL_RAW_SPECTRUM = 0.2
# If a range gate contains this fraction of nan, it will completely be masked
MAX_FRACTION_OF_NAN_AT_RANGE = 0.9
# How much should the mask be dilated
NUM_ITERATIONS_INTERF_MASK_DILATION = 3

# Parameters for border correction
# How many gates are ignored at the left and right-most sides of spectrum when looking for lines
# spanning the whole velocity range (to avoid contamination by power drop at borders)
MARGIN_L_BORD_CORR = 3
MARGIN_R_BORD_CORR = 3

# ==================================================================================================
[TRANSFER_FUNCTION_PARAMETERS]
# In case the transfer function in the files has problems (e.g. abrupt cutoff), this section 
# allows the user to decide how to handle it.
# We suggest to contact Metek, hey will likely be able to provide you with the correct transfer 
# function for your MRR-PRO.
# In case it is impossible to recover it, then you can proceed with the reconstruction
# provided in the library.
# ==================================================================================================
# Use external transfer function?
# In case you have access to the correct transfer function in a separate file, set this flag
# to 1 (meaning True). Usually Metek provides the correct transfer function in case of problem, in
# a ".txt" file.
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
USE_EXTERNAL_TRANSFER_FUNCTION = 0

# The full path (filename and extension included) to the ".txt" file containing the correct
# Transfer function
# Note: if the MRR-PRO has no problems with the transfer function and an external one is not used,
# the value of this flag does not matter (it can be left as it is)
EXTERNAL_TRANSFER_FUNCTION_PATH = directory/containing/external/transfer_function.txt

# Reconstruct the transfer function in case of abrupt cutoff?
# (See note above: it si not suggested to proceed with the reconstruction if it is possible to
# ask Metek for the real one)
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
RECONSTRUCT_TRANSFER_FUNCTION = 0

# ==================================================================================================
[SPECTRUM_RECONSTRUCTION_PARAMETERS]
# --------------------------------------------------------------------------------------------------
# Parameters for the reconstruction of the part of the spectrum below the inerference mask and
# above a certain threshold.
# ==================================================================================================
# Reconstruct the spectrum affected by the interference lines?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
RECONSTRUCT_SPECTRUM = 1

# When detecting small interference "blobs", how far do we go looking for peaks around it?
# (In terms of surrounding velocity bins\\range gates)
MARGIN_SMALL_INTERF_DETECTION = 2

# Maximum number of peak around a small interference line before we stop considering it
# isolated
MAX_NUM_PEAKS_IN_MARGIN_SMALL_INTERF = 5

# When dealing with interference lines spannign the whole velocity range, this is the fraction
# of velocity bin that must be registered as "strong enough"
FRACTION_VEL_LINE_INTERFERENCE = 0.8

# Number of range gates to consider as "surroundings" for the reconstruction
# (Used in peak detection)
ADIACIENTIA_WIDTH = 5

# Threshold above which we are sure that the masked region is surrounded by strong enough
# precipitation and we may keep some of the peaks below the mask for the reconstruction.
EXCEPTIONAL_ANOMALY_THREHSOLD = 5

# The tolerance in velocity bins when we look for the peaks covered by the interference lines
# to keep (they must be not more than "horizontal_tol" away from the median peak of the
# precipitation signal above or below the mask).
HORIZONTAL_TOL_SPECTRUM_RECONSTRUCTION = 5

# Minimum vertical size of the windows used in the reconstruction.
# Note that the Gaussian Kernel used will have a standard deviation equal to MIN_WIN_RECONSTR\\8.
MIN_WIN_RECONSTRUCTION = 8

# When the area to reconstruct is larger than MIN_WIN_RECONSTRUCTION, the kernel size is determined
# by divifing the maximum number of range gates to reconstruct by the following factor:
KERNEL_SCALE_FACTOR = 3

# The lowest range gates of a typical MRR-PRO spectrum have to be excluded them from reconstruction
# to avoid creating artifacts in the gates above. The following variable specifies how many gates
# will be excluded. Note that those gates will be later processed, they are only excluded from the
# spectrum reconstruction step.
NUM_BOTTOM_GATES_TO_SKIP_IN_RECONSTRUCTION = 15

# Volumes in the spectrum inside the interference mask and above the following threshold will be
# masked out and reconstructed.
# It is suggested to keep it significantly above PROMINENCE_THRESHOLD_RAW_SPECTRUM.
MIN_PROMINENCE_THRESHOLD_RECONSTRUCTED = 1.0

# ==================================================================================================
[SPECTRUM_PROCESSING_PARAMETERS]
# --------------------------------------------------------------------------------------------------
# Parameters for the processing of files and spectra from a dataset:
# separation of the signal and the noise level, computation of the moments and minor adjustments.
# ==================================================================================================
# Parameters for choosing suitable candidates for peaks
# Prominence in case the spectrum is "raw"
PROMINENCE_THRESHOLD_RAW_SPECTRUM = 0.2
# Secondary peaks (at the same r) must be at least this fraction of the main one 
RELATIVE_PROMINENCE_THRESHOLD = 0.25
# Maximum number of peaks at each range gate
MAX_NUM_PEAKS_AT_R = 6

# Looking for lines of closeby peaks (favoring peaks in adjacent ranges)
WINDOW_R = 5
WINDOW_V = 10

# Studying properties of the lines
MIN_NUM_PEAKS_IN_LINE = 3

# Velocity tolerance (in m\\s) when considering a line as repeated one (at v +\\- v_ny)
VEL_TOL = 1. 

# Threshold to decide when to stop for DA algortihm (to find noise lvl\\std)
DA_THRESHOLD = 1.e-3

# Multiplication factor for std when computing the final noise level
# (= noise_lvl + NOISE_STD_FACTOR * noise_std)
NOISE_STD_FACTOR = 3

# Should the noise level be corrected to avoid random peaks influencing SNR?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
CORRECT_NOISE_LVL = 1
# Window width fo the kernel, used to merge the noise computed with the standard profile
NOISE_CORR_WINDOW = 5
# Maximum accepted difference between computed noise lvl and the standard one
MAX_DIFF_NOISE_LVL = 0.2

# Factor in IMProToo used when converting from raw spectrum to eta
CALIB_CONST_FACTOR = 1.e20

# Should isolated peaks in the spectrum be removed before computing reflectivity?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
REMOVE_ISOLATED_PEAK_SPECTRUM = 1

# ==================================================================================================
[POSTPROCESSING_PARAMETERS]
# --------------------------------------------------------------------------------------------------
# Parameters for the post-processing of a dataset: elimination of random noise and simple dealiasing
# ==================================================================================================
# Minimum accepted signal to noise ratio, to be imposed if any of the postprocessing is enabled
MIN_SNR_POSTPROC = -20

# Remove remaining interference in postprocessing?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
REMOVE_INTERF_POSTPROC = 1
# Minimum fraction of measurements at each range gate (if less, it won't be investigated)
MIN_TIME_FRACTION_INTERF_POSTPROC = 0.2
# Window size (in time and range) used for interference detection
WINDOW_POSTPROCESS_T = 40
WINDOW_POSTPROCESS_R = 40
# Minimum fraction of the window width (in time dimension) occupied by the interference
MIN_HALF_FRACTION = 0.2
# Minimum ratio inside window: num valid mesures in time \\ num valid range in time
MIN_RATIO_H_V = 2
# Minimum value of interference flag before removal of the pixel
MIN_INTERF_FLAG = 20

# Remove isolated artifacts (noise)?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
REMOVE_NOISE_POSTPROC = 1
# Minimum number of gates with valid measurements to avoid removal 
MIN_SLICE_LENGHT_NOISE_REMOVAL = 3
# Minimum number of pixel in contiguous region with valid measurements to avoid removal 
MIN_NUM_PIXEL_NOISE_REMOVAL = 4


# ==================================================================================================
[DEBUGGING_PARAMETERS]
# ==================================================================================================
# Should information be printed during processing?
# Table of possible values:
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
VERBOSE = 1
# In case VERBOSE = 1, processing information will be displayed every "PRINT_EVERY_N" files
PRINT_EVERY_N = 10

# Should all warnings be ignored?
# ATTENTION: WE SUGGEST TO KEEP THIS OFF (equal to 0)
# Especially during the first runs of this algorithm, warnings can help in identifying problems such
# as installation issues, outdated packages or unexpected behavior from the code.
# ------------------------------
# Flag values | Meaning of flag
# ------------------------------
#      0      |      False
#      1      |      True
# ------------------------------
IGNORE_WARNINGS = 1